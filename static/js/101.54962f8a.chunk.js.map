{"version":3,"file":"static/js/101.54962f8a.chunk.js","mappings":"wMAKA,SAASA,EAAcC,EAASC,GAM/B,YALgBC,IAAZD,IACHA,EAAUD,EACVA,EAAU,GAGHG,KAAKC,UAAYH,EAAUD,EAAU,GAAMA,CACnD,CCQD,I,mCAZMK,EAAQ,CACb,CAAEC,KAAM,QAASC,MAAM,SAAC,MAAD,IAAmBC,IAAK,8BAC/C,CAAEF,KAAM,UAAWC,MAAM,SAAC,MAAD,IAAeC,IAAK,mDAC7C,CAAEF,KAAM,UAAWC,MAAM,SAAC,MAAD,IAAsBC,IAAK,iCACpD,CAAEF,KAAM,SAAUC,MAAM,SAAC,MAAD,IAAkBC,IAAK,gCAC/C,CAAEF,KAAM,WAAYC,MAAM,SAAC,MAAD,IAAoBC,IAAK,kDACnD,CAAEF,KAAM,WAAYC,MAAM,SAAC,MAAD,IAAgBC,IAAK,oCAG5CC,EDhBK,iEACNC,KAAKC,UAAUC,WCeY,GAAK,IAE/BC,EAAa,GACRC,EAAI,EAAGA,EAAIL,EAAYK,IAAK,CACpC,IAAIC,EAAWhB,EAAc,EAAG,KAC5BiB,EAASjB,GAAe,GAAI,IAC5BkB,EAAYlB,EAAc,GAAI,IAC9BmB,EAAef,KAAKC,SAElBe,GAAiBC,EAAAA,EAAAA,IAAH,qJAChBH,EAAqCF,EAAWC,EAAaC,EAAsBC,EACzDH,EAAWC,EAAS,EAAqBE,GAGnEG,EAAQC,EAAAA,GAAAA,IAAH,iKAEKnB,KAAKoB,IAAI,GAAKpB,KAAKC,UACPW,EACVI,EAAkBpB,EAAc,GAAI,KAASA,EAAc,KAE3Ec,EAAWW,MAAK,SAACH,EAAD,CAAOI,UAAU,aAAjB,eAA0CX,IAC1D,CAED,IA4BA,EA5Bc,WACb,OAA4BY,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACTD,EAAUf,EACV,GAAE,KAEI,iCACN,gBAAKY,UAAU,OAAOK,GAAG,OAAzB,SAAiCH,KAGjC,iBAAKF,UAAU,kBAAf,WAEC,mCAEA,gBAAKA,UAAU,aAAf,SACEpB,EAAM0B,KAAI,SAACC,EAAMC,GAAP,OACV,eAAGC,KAAMF,EAAKxB,IAAKiB,UAAU,OAAOU,MAAO,CAAEC,UAAU,cAAD,OAAgB,GAAM,IAAOH,EAA7B,aAAtD,WACC,iBAAMI,MAAM,QACXL,EAAKzB,MACN,uBAAIyB,EAAK1B,SAHiG0B,EAAK1B,KADtG,WAUd,C","sources":["core/Util.jsx","pages/links/Links.jsx"],"sourcesContent":["function isMobile() {\r\n\treturn (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i) // who seriously uses blackberry in this day and age...\r\n\t\t.test(navigator.userAgent);\r\n}\r\n\r\nfunction randomInteger(minimum, maximum) {\r\n\tif (maximum === undefined) {\r\n\t\tmaximum = minimum;\r\n\t\tminimum = 0;\r\n\t}\r\n\r\n\treturn (Math.random() * (maximum - minimum + 1)) + minimum;\r\n}\r\n\r\nexport { isMobile, randomInteger };","import \"../../styles/CoreStyles.scss\";\r\nimport \"./Links.scss\";\r\nimport { AiFillGithub, AiOutlineMail, AiOutlineTwitter, AiFillLinkedin } from \"react-icons/ai\";\r\nimport { SiLeetcode, SiDiscord } from \"react-icons/si\";\r\nimport { isMobile, randomInteger } from \"../../core/Util\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\n\r\nconst links = [\r\n\t{ text: \"Email\", icon: <AiOutlineMail />, url: \"mailto:andyhecsp@gmail.com\" },\r\n\t{ text: \"Discord\", icon: <SiDiscord />, url: \"https://discordapp.com/users/187003715302064128\" },\r\n\t{ text: \"Twitter\", icon: <AiOutlineTwitter />, url: \"https://twitter.com/bforbiggy\" },\r\n\t{ text: \"Github\", icon: <AiFillGithub />, url: \"https://github.com/bforbiggy\" },\r\n\t{ text: \"LinkedIn\", icon: <AiFillLinkedin />, url: \"https://www.linkedin.com/in/andy-he-a31771242/\" },\r\n\t{ text: \"LeetCode\", icon: <SiLeetcode />, url: \"https://leetcode.com/bforbiggy/\" },\r\n];\r\n\r\nlet flakeCount = isMobile() ? 50 : 200;\r\n\r\nlet snowflakes = [];\r\nfor (let i = 0; i < flakeCount; i++) {\r\n\tlet random_x = randomInteger(0, 100);\r\n\tlet offset = randomInteger(-10, 10);\r\n\tlet yoyo_time = randomInteger(30, 80);\r\n\tlet random_scale = Math.random();\r\n\r\n\tconst flakeAnimation = keyframes`\r\n\t\t\t${yoyo_time}% { transform: translate(${random_x + offset}vw, ${yoyo_time}vh) scale(${random_scale});}\r\n\t\t\tto { transform: translate(${random_x + offset / 2}vw, 100vh) scale(${random_scale});}\r\n\t\t`;\r\n\r\n\tlet Flake = styled.div`\r\n\t\t\tfilter:\r\n\t\t\t\topacity: ${Math.max(0.1, Math.random())};\r\n\t\t\t\ttransform: translate(${random_x}vw, -10px);\r\n\t\t\t\tanimation: ${flakeAnimation} ${randomInteger(10, 30)}s ${-randomInteger(30)}s linear infinite;\r\n\t\t`;\r\n\tsnowflakes.push(<Flake className=\"snowflake\" key={`flake${i}`} />);\r\n}\r\n\r\nconst Links = () => {\r\n\tconst [flakes, setFlakes] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetFlakes(snowflakes);\r\n\t}, []);\r\n\r\n\treturn <>\r\n\t\t<div className=\"snow\" id=\"snow\">{flakes}</div>\r\n\r\n\r\n\t\t<div className=\"links-container\">\r\n\r\n\t\t\t<h1>Links</h1>\r\n\r\n\t\t\t<div className=\"linkedlist\">\r\n\t\t\t\t{links.map((link, index) => (\r\n\t\t\t\t\t<a href={link.url} className=\"link\" style={{ animation: `link-entry ${0.5 + 0.05 * index}s linear` }} key={link.text}>\r\n\t\t\t\t\t\t<span class=\"dot\"></span>\r\n\t\t\t\t\t\t{link.icon}\r\n\t\t\t\t\t\t<p>{link.text}</p>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</>;\r\n}\r\n\r\nexport default Links;"],"names":["randomInteger","minimum","maximum","undefined","Math","random","links","text","icon","url","flakeCount","test","navigator","userAgent","snowflakes","i","random_x","offset","yoyo_time","random_scale","flakeAnimation","keyframes","Flake","styled","max","push","className","useState","flakes","setFlakes","useEffect","id","map","link","index","href","style","animation","class"],"sourceRoot":""}