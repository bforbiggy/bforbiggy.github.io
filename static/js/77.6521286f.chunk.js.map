{"version":3,"file":"static/js/77.6521286f.chunk.js","mappings":"mPA6IA,EAjIqB,WACnB,OAAoCA,EAAAA,EAAAA,WAAS,GAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,MAAjC,eAAOK,EAAP,KAAaC,EAAb,KACMC,EAAQ,CACZ,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,WAAY,UACZC,WAAY,UACZC,IAAK,UACLC,KAAM,YAGRC,EAAAA,EAAAA,YAAU,YACR,uBAAC,2GAEsBC,MAAM,gDACxBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,IACbF,MAAK,SAAAC,GAAQ,OAAIA,EACfE,QAAO,SAACC,GACP,OAAQA,EAAKC,IACd,IACAC,MAAK,SAACC,EAAGC,GACR,OAAOA,EAAEC,iBAAmBF,EAAEE,gBAC/B,GANW,IAJjB,cAEKC,EAFL,OAWCtB,EAASsB,GAXV,SAcsBX,MAAM,0CAA0CC,MACnE,SAACC,GAAD,OAAcA,EAASC,MAAvB,IAfH,OAcKS,EAdL,OAiBCrB,EAAQqB,GAERzB,GAAc,GAnBf,0CAAD,EAqBD,GAAE,IAEH,IAAM0B,EAAmB,SAACC,GAAc,IAAD,MAErC,OADAA,EAAQ,UAAGA,SAAH,QAAe,OACvB,UAAOtB,EAAK,UAACsB,SAAD,aAAC,EAAUC,sBAAvB,QAAyC,MAC1C,EAED,OACE,iBACEC,UAAU,yBACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAAA,EAAT,MAF1B,WAIE,0BACGjC,GAAa,SAACkC,EAAA,EAAD,CAAQC,OAAO,KAAY,iCACvC,gBAAKL,UAAU,OAAf,SACG1B,IAAS,iCACR,gBAAK0B,UAAU,SAAf,UACE,gBAAKM,IAAI,mCAAmCC,IAAI,mBAElD,iBAAKP,UAAU,YAAf,WACE,iBAAKA,UAAU,OAAf,0BAA0B1B,EAAKkC,MAA/B,oBACA,gBAAKR,UAAU,MAAf,SAAsB1B,EAAKmC,OAC3B,iBAAKT,UAAU,QAAf,WACE,iBAAKA,UAAU,MAAf,WACE,SAAC,MAAD,IADF,mBAEmB,QAEnB,gBAAKA,UAAU,QAAf,SAAwB1B,EAAKoC,mBAE/B,iBAAKV,UAAU,QAAf,WACE,iBAAKA,UAAU,MAAf,WACE,SAAC,MAAD,IADF,gBAEgB,QAEhB,gBAAKA,UAAU,QAAf,SAAwB1B,EAAKqC,wBAOrC,iBAAKX,UAAU,eAAf,WACE,gBAAKA,UAAU,QAAf,wCADF,OAEG5B,QAFH,IAEGA,OAFH,EAEGA,EAAOwC,KAAI,SAACC,GAAD,aACV,eACEC,KAAMD,EAAKE,SACXC,OAAO,SAASC,IAAI,aACpBjB,UAAU,uBAHZ,WAKE,iBAAKA,UAAU,OAAf,WACE,SAAC,KAAD,IADF,IACuBa,EAAKK,SAE5B,gBAAKlB,UAAU,cAAf,SAA8Ba,EAAKM,eACnC,iBAAKnB,UAAU,iBAAf,WACE,iBAAKA,UAAU,OAAf,WACE,gBAAKA,UAAU,MAAf,4BACA,gBACEA,UAAU,QACVC,MAAO,CACLmB,MAAOvB,EAAiBgB,EAAKf,UAC7BuB,SAAU,SAJd,mBAOGR,EAAKf,gBAPR,QAOoB,aAItB,iBAAKE,UAAU,OAAf,WACE,gBAAKA,UAAU,MAAf,yBACA,gBAAKA,UAAU,QAAf,SACG,IAAIsB,KAAKT,EAAKU,YAAYC,2BAI/B,iBAAKxB,UAAU,OAAf,WACE,gBAAKA,UAAU,MAAf,UACE,SAAC,MAAD,OAEF,gBAAKA,UAAU,QAAf,SAAwBa,EAAKnB,2BAnCzB,aA6ClB,SAAC+B,EAAA,EAAD,MAGL,C","sources":["pages/repositories/Repositories.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport Loader from \"../../core/Loader/Loader\";\r\nimport \"./Repositories.scss\";\r\nimport {\r\n  RiGitBranchLine,\r\n  RiGitRepositoryFill,\r\n  RiUserFollowLine,\r\n} from \"react-icons/ri\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport bg from \"../../assets/sprinkle.svg\";\r\n\r\nconst Repositories = () => {\r\n  const [isFetching, setIsFetching] = useState(true);\r\n  const [repos, setRepos] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n  const langs = {\r\n    \"c#\": \"#af36ff\",\r\n    scss: \"#ff36c6\",\r\n    html: \"#ff5917\",\r\n    javascript: \"#ffdf6b\",\r\n    typescript: \"#0096ed\",\r\n    css: \"#00fbff\",\r\n    null: \"#ff00a2\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // Retrieve and set repository data (after filters/sorts)\r\n      let repoData = await fetch(\"https://api.github.com/users/bforbiggy/repos\")\r\n        .then(response => response.json())\r\n        .then(response => response\r\n          .filter((item) => {\r\n            return !item.fork;\r\n          })\r\n          .sort((a, b) => {\r\n            return b.stargazers_count - a.stargazers_count;\r\n          }))\r\n      setRepos(repoData);\r\n\r\n      // Retrieve and set user data\r\n      let userData = await fetch(\"https://api.github.com/users/bforbiggy\").then(\r\n        (response) => response.json()\r\n      );\r\n      setUser(userData);\r\n\r\n      setIsFetching(false);\r\n    })();\r\n  }, []);\r\n\r\n  const getLanguageColor = (language) => {\r\n    language = language ?? \"null\";\r\n    return langs[language?.toLowerCase()] ?? \"#FFF\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"repositories-container\"\r\n      style={{ backgroundImage: `url(${bg})` }}\r\n    >\r\n      <main>\r\n        {isFetching ? <Loader local={true} /> : (<>\r\n          <div className=\"user\">\r\n            {user && (<>\r\n              <div className=\"avatar\">\r\n                <img src=\"https://github.com/bforbiggy.png\" alt=\"Biggy's pfp\" />\r\n              </div>\r\n              <div className=\"user-info\">\r\n                <div className=\"name\">ðŸŽ´ {user.login} ðŸŽ´</div>\r\n                <div className=\"bio\">{user.bio}</div>\r\n                <div className=\"field\">\r\n                  <div className=\"key\">\r\n                    <RiGitRepositoryFill />\r\n                    Repositories:~ ${\" \"}\r\n                  </div>\r\n                  <div className=\"value\">{user.public_repos}</div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <div className=\"key\">\r\n                    <RiUserFollowLine />\r\n                    Followers:~ ${\" \"}\r\n                  </div>\r\n                  <div className=\"value\">{user.followers}</div>\r\n                </div>\r\n              </div>\r\n            </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"repositories\">\r\n            <div className=\"title\">bforbiggy@Repositories:~ $</div>\r\n            {repos?.map((data) => (\r\n              <a\r\n                href={data.html_url}\r\n                target=\"_blank\" rel=\"noreferrer\"\r\n                className=\"repository-container\"\r\n              >\r\n                <div className=\"name\">\r\n                  <RiGitBranchLine /> {data.name}\r\n                </div>\r\n                <div className=\"description\">{data.description}</div>\r\n                <div className=\"info-container\">\r\n                  <div className=\"item\">\r\n                    <div className=\"key\">Main Language</div>\r\n                    <div\r\n                      className=\"value\"\r\n                      style={{\r\n                        color: getLanguageColor(data.language),\r\n                        fontSize: \"1.1em\",\r\n                      }}\r\n                    >\r\n                      {data.language ?? \"null\"}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"key\">Created On</div>\r\n                    <div className=\"value\">\r\n                      {new Date(data.created_at).toLocaleDateString()}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"key\">\r\n                      <FaStar />\r\n                    </div>\r\n                    <div className=\"value\">{data.stargazers_count}</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            ))\r\n            }\r\n          </div>\r\n        </>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repositories;\r\n"],"names":["useState","isFetching","setIsFetching","repos","setRepos","user","setUser","langs","scss","html","javascript","typescript","css","null","useEffect","fetch","then","response","json","filter","item","fork","sort","a","b","stargazers_count","repoData","userData","getLanguageColor","language","toLowerCase","className","style","backgroundImage","bg","Loader","local","src","alt","login","bio","public_repos","followers","map","data","href","html_url","target","rel","name","description","color","fontSize","Date","created_at","toLocaleDateString","Footer"],"sourceRoot":""}