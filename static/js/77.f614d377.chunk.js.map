{"version":3,"file":"static/js/77.f614d377.chunk.js","mappings":"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","sources":["pages/repositories/Repositories.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../core/Footer/Footer\";\r\nimport Loader from \"../../core/Loader/Loader\";\r\nimport { RiGitBranchLine, RiGitRepositoryFill, RiUserFollowLine } from \"react-icons/ri\";\r\nimport { FaStar } from \"react-icons/fa\";\r\nimport \"./Repositories.scss\";\r\n\r\nconst langColors = {\r\n  \"c#\": \"#af36ff\",\r\n  scss: \"#ff36c6\",\r\n  html: \"#ff5917\",\r\n  javascript: \"#ffdf6b\",\r\n  typescript: \"#0096ed\",\r\n  css: \"#00fbff\",\r\n  null: \"#ff00a2\",\r\n};\r\n\r\nasync function retrieveUserData(setRepos, setUser) {\r\n  // Retrieve and set repository data (after filters/sorts)\r\n  let repoData = await fetch(\"https://api.github.com/users/bforbiggy/repos\")\r\n    .then(response => response.json())\r\n    .then(response => response\r\n      .filter(item => !item.fork)\r\n      .sort((a, b) => b.stargazers_count - a.stargazers_count || b.size - a.size))\r\n  setRepos(repoData);\r\n\r\n  // Retrieve and set user data\r\n  let userData = await fetch(\"https://api.github.com/users/bforbiggy\").then((response) => response.json());\r\n  setUser(userData);\r\n\r\n}\r\n\r\nconst Repositories = () => {\r\n  const [isFetching, setIsFetching] = useState(true);\r\n  const [repos, setRepos] = useState([]);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    retrieveUserData(setRepos, setUser)\r\n    setIsFetching(false);\r\n  }, []);\r\n\r\n  const getLanguageColor = (language) => {\r\n    language = language ?? \"null\";\r\n    return langColors[language?.toLowerCase()] ?? \"#FFF\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"repositories-container\">\r\n      <main>\r\n        {isFetching ? <Loader local={true} /> : (<>\r\n          <div className=\"user\">\r\n            {user && (<>\r\n              <img className=\"avatar\" src=\"https://github.com/bforbiggy.png\" alt=\"Biggy's pfp\" />\r\n              <div className=\"user-info\">\r\n                <div className=\"name\">ðŸŽ´ {user.login} ðŸŽ´</div>\r\n                <div className=\"bio\">{user.bio}</div>\r\n                <div className=\"field\">\r\n                  <div className=\"key\">\r\n                    <RiGitRepositoryFill />\r\n                    {\"Repositories:~ $ \"}\r\n                  </div>\r\n                  <div className=\"value\">{user.public_repos}</div>\r\n                </div>\r\n                <div className=\"field\">\r\n                  <div className=\"key\">\r\n                    <RiUserFollowLine />\r\n                    Followers:~ ${\" \"}\r\n                  </div>\r\n                  <div className=\"value\">{user.followers}</div>\r\n                </div>\r\n              </div>\r\n            </>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"repositories\">\r\n            <div className=\"title\">bforbiggy@Repositories:~ $</div>\r\n            {repos?.map((data) => (\r\n              <a\r\n                href={data.html_url}\r\n                target=\"_blank\" rel=\"noreferrer\" key={data.name}\r\n                className=\"repository-container\"\r\n              >\r\n                <div className=\"name\">\r\n                  <RiGitBranchLine /> {data.name}\r\n                </div>\r\n\r\n                <div className=\"description\">{data.description}</div>\r\n                <div className=\"info-container\">\r\n                  <div className=\"item\">\r\n                    <div className=\"key\">Main Language</div>\r\n                    <div\r\n                      className=\"value\"\r\n                      style={{ color: getLanguageColor(data.language) }}\r\n                    >\r\n                      {data.language ?? \"Unknown\"}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"key\">Created On</div>\r\n                    <div className=\"value\">\r\n                      {new Date(data.created_at).toLocaleDateString()}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"item\">\r\n                    <div className=\"key\">\r\n                      <FaStar />\r\n                    </div>\r\n                    <div className=\"value\">{data.stargazers_count}</div>\r\n                  </div>\r\n                </div>\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </>\r\n        )}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Repositories;\r\n"],"names":["langColors","scss","html","javascript","typescript","css","null","retrieveUserData","setRepos","setUser","fetch","then","response","json","filter","item","fork","sort","a","b","stargazers_count","size","repoData","userData","useState","isFetching","setIsFetching","repos","user","useEffect","getLanguageColor","language","toLowerCase","className","Loader","local","src","alt","login","bio","public_repos","followers","map","data","href","html_url","target","rel","name","description","style","color","Date","created_at","toLocaleDateString","Footer"],"sourceRoot":""}